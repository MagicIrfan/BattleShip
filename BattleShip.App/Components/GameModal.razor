<div class="modal-content">
    <h1>@Title</h1>
    <p>@Message</p>
    <div class="modal-buttons">
        <button @onclick="async () => await RestartGame()">Recommencer</button>
        <button @onclick="async () => await ReturnToMain()">Retour</button>
    </div>
</div>

<style>
    .modal-content {
        background-color: #f9f9f9;
        border-radius: 15px;
        padding: 20px;
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
        max-width: 500px;
        margin: auto;
        text-align: center;
    }

    .modal-content h1 {
        color: #003366;
        margin-bottom: 15px;
    }

    .modal-content p {
        color: #555;
        margin-bottom: 20px;
        font-size: 16px;
    }

    .modal-content button {
        background-color: #7fc9ff;
        border: none;
        border-radius: 30px;
        color: #003366;
        cursor: pointer;
        font-size: 16px;
        width: 12em;
        font-weight:bold;
        padding: 15px 20px;
        margin: 0 10px;
        transition: transform 0.3s ease, background-color 0.3s ease;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
    }

    .modal-content button:hover {
        transform: scale(1.1);
        background-color: #66b3ff;
    }

    .modal-content button:focus {
        outline: none;
    }

    .modal-content .modal-buttons{
        margin-top:2.5em;
        margin-bottom:1.25em;
    }
</style>

@code {
    [CascadingParameter]
    BlazoredModalInstance ModalInstance { get; set; }

    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public string Message { get; set; }

    private async Task RestartGame()
    {
        if (ModalInstance != null)
        {
            await ModalInstance.CloseAsync(ModalResult.Ok("restart"));
        }
    }

    private async Task ReturnToMain()
    {
        if (ModalInstance != null)
        {
            await ModalInstance.CloseAsync(ModalResult.Ok("return"));
        }
    }
}
