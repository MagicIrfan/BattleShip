@inject IJSRuntime JS

<div class="grid" style="--grid-size: @(PositionsData.Length); --cell-size: 40px;">
    @foreach (var row in Enumerable.Range(0, PositionsData.Length))
    {
        @foreach (var col in Enumerable.Range(0, PositionsData[0].Length))
        {
            var opponentPositionData = PositionsData[col][row];
            var opponentPosition = opponentPositionData.Position;

            string cellBackgroundColor = GridUtils.GetCellBackgroundColor(opponentPositionData);
            bool isDisabled = PositionState.MISS.Equals(opponentPositionData.State) ||
            PositionState.HIT.Equals(opponentPositionData.State) ||
            IsPlacingBoats || !IsReady;

            <button class="cell"
                    @onclick="() => OnAttack.InvokeAsync(opponentPosition)"
                    style="background-color: @(cellBackgroundColor)"
                    disabled="@isDisabled">
            </button>
        }
    }
</div>

@code {
    [Parameter]
    public PositionData[][] PositionsData { get; set; }

    [Parameter]
    public bool IsPlacingBoats { get; set; }
    [Parameter]
    public bool IsReady { get; set; }

    [Parameter]
    public EventCallback<Position> OnAttack { get; set; }
}

<style>
    .grid {
        display: grid;
        grid-template-columns: repeat(var(--grid-size), var(--cell-size));
        grid-template-rows: repeat(var(--grid-size), var(--cell-size));
        gap: 5px;
        background-color: #dce7f1;
        padding: 10px;
        border-radius: 10px;
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
        width: max-content;
        height: max-content;
        max-width: calc(var(--cell-size) * 15 + 100px);
        max-height: calc(var(--cell-size) * 15 + 100px);
    }

    .cell {
        width: var(--cell-size);
        height: var(--cell-size);
        border: 1px solid #b0c4de;
        border-radius: 4px;
        position: relative;
        transition: transform 0.2s, background-color 0.2s;
    }

        .cell:not([disabled]):hover {
            background-color: #7fc9ff;
            cursor: pointer;
        }

    .boat-symbol {
        font-weight: bold;
        color: darkblue;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }
</style>
